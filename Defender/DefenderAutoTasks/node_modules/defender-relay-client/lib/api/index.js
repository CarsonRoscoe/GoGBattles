"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiRelayer = exports.RelayerApiUrl = void 0;
const defender_base_client_1 = require("defender-base-client");
exports.RelayerApiUrl = () => process.env.DEFENDER_RELAY_API_URL || 'https://api.defender.openzeppelin.com/';
class ApiRelayer extends defender_base_client_1.BaseApiClient {
    constructor(params) {
        super(params);
        this.jsonRpcRequestNextId = 1;
    }
    getPoolId() {
        return process.env.DEFENDER_RELAY_POOL_ID || 'us-west-2_iLmIggsiy';
    }
    getPoolClientId() {
        return process.env.DEFENDER_RELAY_POOL_CLIENT_ID || '1bpd19lcr33qvg5cr3oi79rdap';
    }
    getApiUrl() {
        return exports.RelayerApiUrl();
    }
    async getRelayer() {
        return this.apiCall(async (api) => {
            return (await api.get('/relayer'));
        });
    }
    async sendTransaction(payload) {
        return this.apiCall(async (api) => {
            return (await api.post('/txs', payload));
        });
    }
    async replaceTransactionById(id, payload) {
        return this.apiCall(async (api) => {
            return (await api.put(`/txs/${id}`, payload));
        });
    }
    async replaceTransactionByNonce(nonce, payload) {
        return this.apiCall(async (api) => {
            return (await api.put(`/txs/${nonce}`, payload));
        });
    }
    async sign(payload) {
        return this.apiCall(async (api) => {
            return (await api.post('/sign', payload));
        });
    }
    async query(id) {
        return this.apiCall(async (api) => {
            return (await api.get(`txs/${id}`));
        });
    }
    async list(criteria) {
        return this.apiCall(async (api) => {
            return (await api.get(`txs`, { params: criteria !== null && criteria !== void 0 ? criteria : {} }));
        });
    }
    async call(method, params) {
        return this.apiCall(async (api) => {
            return (await api.post(`/relayer/jsonrpc`, {
                method,
                params,
                jsonrpc: '2.0',
                id: this.jsonRpcRequestNextId++,
            }));
        });
    }
}
exports.ApiRelayer = ApiRelayer;
